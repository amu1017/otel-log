<?xml version="1.0" encoding="UTF-8"?>
<!--
  Maven プロジェクト設定ファイル
  
  このファイルは OpenTelemetry Java Log4j Appender を使用するための
  サンプルプロジェクトの依存関係を定義します。
  
  【重要な依存関係】
  1. opentelemetry-sdk : OpenTelemetryの基本SDK
  2. opentelemetry-exporter-otlp : OTLPフォーマットでログをエクスポート
  3. opentelemetry-log4j-appender-2.17 : Log4j2とOpenTelemetryを連携させるAppender
  4. log4j-core, log4j-api : Log4j2の基本ライブラリ
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>otel-log4j-example</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>OpenTelemetry Log4j Appender Example</name>
    <description>Log4j AppenderベースのOpenTelemetryログ計装のサンプルプロジェクト</description>

    <properties>
        <!-- Java 17を使用（Java 8以上であれば動作） -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- OpenTelemetryの最新バージョンを定義 -->
        <opentelemetry.version>1.53.0</opentelemetry.version>
        <!-- Log4jの安定バージョンを定義 -->
        <log4j.version>2.21.1</log4j.version>
        <!-- OpenTelemetry Instrumentation（Appender）の最新バージョン -->
        <opentelemetry.instrumentation.version>2.18.1-alpha</opentelemetry.instrumentation.version>
    </properties>

    <dependencies>
        <!-- OpenTelemetry 基本SDK -->
        <!-- テレメトリーデータ（ログ、メトリクス、トレース）を収集・処理するためのコア機能 -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk</artifactId>
            <version>${opentelemetry.version}</version>
        </dependency>

        <!-- OpenTelemetry Log SDK -->
        <!-- ログ特化の機能を提供。LogRecord の作成・処理などを担当 -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-logs</artifactId>
            <version>${opentelemetry.version}</version>
        </dependency>

        <!-- OTLP Exporter -->
        <!-- 収集したテレメトリーデータをOTLP形式でエクスポートするために必要 -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
            <version>${opentelemetry.version}</version>
        </dependency>

        <!-- OpenTelemetry Log4j Appender -->
        <!-- Log4jのログイベントをOpenTelemetryのログ形式に変換するAppender -->
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-log4j-appender-2.17</artifactId>
            <version>${opentelemetry.instrumentation.version}</version>
        </dependency>

        <!-- Log4j Core -->
        <!-- Log4jの基本機能。実際のログ処理を行う -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- Log4j API -->
        <!-- Log4jのAPIインターフェース。アプリケーションコードはこれを使用 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- Tracing支援のためのSemantic Conventions -->
        <!-- 標準的な属性名やリソース識別子を提供 -->
        <dependency>
            <groupId>io.opentelemetry.semconv</groupId>
            <artifactId>opentelemetry-semconv</artifactId>
            <version>1.28.0-alpha</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Maven Compiler Plugin -->
            <!-- Javaソースコードをコンパイルするためのプラグイン -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>

            <!-- Exec Maven Plugin -->
            <!-- mvn exec:java でプログラムを実行するためのプラグイン -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <mainClass>com.example.otel.LoggingExample</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>